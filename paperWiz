#!/bin/bash

set -x

# Set your desired resolution here
resW=2560
resH=1440
smallwallres=1080

###########################

# Combine resolutions
res=${resW}x${resH}

cache=$HOME/.cache/paperWiz

# Wallpaper
# Compressed image for histogram
compressedWall=${cache}/compressedWall.png
# Placeholder
grey=${cache}/grey.png
# Colored Images
smallColorImg=${cache}/smallColorImg.png
largeColorImg=${cache}/largeColorImg.png
overlayedImg=${cache}/overlayedImg.png

# Help menu
print_help() {
	cat << EOF
Usage: $(basename $0) [OPTIONS]

Options:
  -w WALLPAPER_PATH   Path to the wallpaper you want to set
  -p POSITION         Set the position of the wallpaper on the main monitor (c: center (default), s: south, n: north, w: west,e: east)
  -c [WALCOLOR]       Set the color for the second monitor (0-15: color0-color15 from pywal, -1: main color from wallpaper (default))
  -s                  Shrink the wallpaper's vertical resolution to ${smallwallres}
  -h, --help          Display this help menu and exit

Example:
  ./$(basename $0) -w /path/to/wallpaper.jpg -p s -c 0 -s
EOF
}

# Defaults
walColor="-1"
position="c"

# Arguments
while getopts ":w:p:c::sh" opt; do
	case $opt in
		w) wallpaper="$OPTARG" ;;
		p) position="$OPTARG" ;;
		c) walColor="$OPTARG" ;;
		s) shrink_res=1 ;;
		h) print_help; exit 0 ;;
		\?) echo "Invalid option: -$OPTARG" >&2; exit 1 ;;
		:) echo "Option -$OPTARG requires an argument." >&2; exit 1 ;;
	esac
done

shift $((OPTIND - 1))

# Check if there are extra arguments
if [ "$#" -gt 0 ]; then
	echo "Error: Extra arguments detected. Please only use valid flags and their respective values." >&2
	exit 1
fi

# Check if the wallpaper variable is set
if [[ -z "${wallpaper}" ]]; then
	echo "Error: The -w flag is required to specify the wallpaper path." >&2
	exit 1
fi

# Check if the color specified is in the right range
if (( ${walColor} < -1 || ${walColor} > 15 )); then
	echo "Error: The color specified must be between -1 and 15" >&2
	exit 1
fi

# Set and check the position variable
case "$position" in
  "c") position="center" ;;
  "n") position="north" ;;
  "s") position="south" ;;
  "e") position="east" ;;
  "w") position="west" ;;
  *)
    echo "Error: The position specified must be c, s, n, w, or e" >&2
    exit 1
    ;;
esac

# Set wallpaper and theme programs
{
	wpg -a "${wallpaper}"
	wpg -s ${wallpaper##*/}

	feh --bg-fill "${wallpaper}" ${grey}
	wal -i "${wallpaper}" -n

	xdotool key Alt_L+F5
	telegram-palette-gen --wal

	waldunst
	dunst &
} &> /dev/null

# Shrink wallpaper, or copy wallpaper to cache
wall=${cache}/wall.png
if [[ ${shrink_res} == "1" ]]; then
	convert "${wallpaper}" -resize 2560x${smallwallres}\> ${wall}
else
	cp "${wallpaper}" ${wall}
fi

# Fetch wallpaper resolution
wallresW=$(identify -format '%w' ${wall})
wallresH=$(identify -format '%h' ${wall})

# pyWal Color
if [[ ${walColor} != "-1" ]]
then
	# Fetch color
	walColorHex=$(cat ~/.cache/wal/colors.sh | grep color${walColor} | cut -d"'" -f2)
	# Small image for second monitor
	convert -size 2x2 xc:${walColorHex} ${smallColorImg}
	feh --bg-fill ${smallColorImg}
	# Check if the wallpaper is larger than the monitor
	if [[ ${wallresW} -ge ${resW} ]] && [[ ${wallresH} -ge ${resH} ]]
	then
		# Use default wallpaper
		feh --bg-fill ${wall} ${smallColorImg}
	else	
		# Create an color image matching the size of the main monitor
		convert -size ${res} xc:${walColorHex} ${largeColorImg}
		# Apply the wallpaper on top of the color image in the position specified
		magick composite -type TrueColor -gravity ${position} ${wall} ${largeColorImg} ${overlayedImg}
		feh --bg-fill ${overlayedImg} ${smallColorImg}
	fi
fi

# Main Color
if [[ ${walColor} == "-1" ]]
then
	# Shrink the wallpaper for faster histogram analysis
	convert "${wallpaper}" -resize 500x500\> ${compressedWall}
	# Fetch the main color in the wallpaper
	mainCol=$(convert ${compressedWall} -define histogram:unique-colors=true -format %c histogram:info:- | sort -n | sed '$!d' | cut -d'#' -f2 | cut -c1-6)
	# Small image for second monitor
	convert -size 2x2 xc:\#${mainCol} ${smallColorImg}
		feh --bg-fill ${smallColorImg}
			# Check if the wallpaper is larger than the monitor
			if [[ ${wallresW} -ge ${resW} ]] && [[ ${wallresH} -ge ${resH} ]]
			then
				# Use default wallpaper
				feh --bg-fill ${wall} ${smallColorImg}
			else	
				# Create an color image matching the size of the main monitor
				convert -size ${res} xc:'#'${mainCol} ${largeColorImg}
				# Apply the wallpaper on top of the color image in the position specified
				magick composite -type TrueColor -gravity ${position} ${wall} ${largeColorImg} ${overlayedImg}
				feh --bg-fill ${overlayedImg} ${smallColorImg}
			fi
fi

# Send notification
notify-send "paperWiz" "Wallpaper set"
