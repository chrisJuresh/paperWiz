#!/bin/bash

# Set your resolution here
resw=2560
resh=1440
smallwallres=1080

###########################

# Combine resolutions
res=${resw}x${resh}

#Cache location
cache=$HOME/.cache/paperWiz

# Where to cache each image
# Wallpaper
wall=${cache}/wall.png
smallwall=${cache}/smallwall.png
# Placeholder
grey=${cache}/grey.png
# pyWal Color
small=${cache}/small.png
large=${cache}/large.png
over=${cache}/over.png
# Main Color
maincolsmall=${cache}/maincolsmall.png
maincollarge=${cache}/maincollarge.png
maincolover=${cache}/maincolover.png

# Help menu function
print_help() {
  cat << EOF
Usage: $(basename $0) [OPTIONS]

Options:
  -w WALLPAPER_PATH   Path to the wallpaper you want to set
  -p POSITION         Set the position of the wallpaper on the main monitor (c: center (default), s: south, n: north, w: west,e: east)
  -c [WALCOLOR]       Set the color for the second monitor (0-15: color0-color15 from pywal, -1: main color from wallpaper (default))
  -s                  Shrink the wallpaper's vertical resolution to ${smallwallres}
  -h, --help          Display this help menu and exit

Example:
  ./$(basename $0) -w /path/to/wallpaper.jpg -p s -c 0 -s
EOF
}

# Defaults to main color
walColor="-1"
position="c"

while getopts ":w:p:c::sh" opt; do
  case $opt in
    w)
      wallpaper="$OPTARG"
      ;;
    p)
      position="$OPTARG"
      ;;
    c)
      walColor="$OPTARG"
      ;;
    s)
      shrink_res=1
      ;;
    h)
      print_help
      exit 0
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND - 1))

# Check if there are extra arguments
if [ "$#" -gt 0 ]; then
  echo "Error: Extra arguments detected. Please only use valid flags and their respective values." >&2
  exit 1
fi

# Check if the wallpaper variable is set
if [[ -z "${wallpaper}" ]]; then
  echo "Error: The -w flag is required to specify the wallpaper path." >&2
  exit 1
fi

# Check if the color specified is in the right range
if (( ${walColor} <= -2 || ${walColor} >= 15 )); then
  echo "Error: The color specified must be between 0 and 15" >&2
  exit 1
fi

# Set and check the position variable
if [ "$position" == "c" ]; then
    position="center"
elif [ "$position" == "n" ]; then
    position="north"
elif [ "$position" == "s" ]; then
    position="south"
elif [ "$position" == "e" ]; then
    position="east"
elif [ "$position" == "w" ]; then
    position="west"
else
	echo "Error: The position specified must be c, s, n, w, or e" >&2
	exit 1
fi

# Sets the main wallpaper and grey as the wallpaper for the second monitor. Also refreshes programs that require it for pywal.
{
wpg -a "${wallpaper}"
wpg -s ${wallpaper##*/}

feh --bg-fill "${wallpaper}" ${grey}
wal -i "${wallpaper}" -n

xdotool key Alt_L+F5
telegram-palette-gen --wal

waldunst
dunst &
} &> /dev/null

# If shrinking is specified, shrink the wallpaper to a vertical resolution of ${smallwallres}, otherwise copy the fullsize wallpaper to the cache.
if [[ ${shrink_res} == "1" ]]; then
  convert "${wallpaper}" -resize 2560x${smallwallres}\> ${wall}
else
  cp "${wallpaper}" ${wall}
fi

# Fetches the wallpapers resolution
wallresW=$(identify -format '%w' ${wall})
wallresH=$(identify -format '%h' ${wall})

# pyWal Color

if [[ ${walColor} != "-1" ]]
then
	# Fetch color4
	walColorHex=$(cat ~/.cache/wal/colors.sh | grep color${walColor} | cut -d"'" -f2)
	# Create a small image of the color to use on the second monitor
	convert -size 2x2 xc:${walColorHex} ${small}
	# Apply the small image of the color to the second monitor
	feh --bg-fill ${small}
	# Check if the wallpaper is larger than the monitor
	if [[ ${wallresW} -ge ${resw} ]] && [[ ${wallresH} -ge ${resh} ]]
	then
		# Fill the main monitor with the wallpaper
		feh --bg-fill ${wall} ${small}
	else	
		# Create an image matching the size of the main monitor with color4
		convert -size ${res} xc:${walColorHex} ${large}
		magick composite -type TrueColor -gravity ${position} ${wall} ${large} ${over}
		# Apply the overlayed wallpaper and the small image of color4
		feh --bg-fill ${over} ${small}
	fi
fi

# Main Color
if [[ ${walColor} == "-1" ]]
then
	#Shrink the wallpaper for faster histogram analysis
  	convert "${wallpaper}" -resize 500x500\> ${smallwall}
	# Fetch the main color in the wallpaper
	maincol=$(convert ${smallwall} -define histogram:unique-colors=true -format %c histogram:info:- | sort -n | sed '$!d' | cut -d'#' -f2 | cut -c1-6)
	# Create a small image of the main color to use on the second monitor
	convert -size 2x2 xc:\#${maincol} ${maincolsmall}
	# Apply the main color to the second monitor
	feh --bg-fill ${maincolsmall}
	# Check if the wallpaper is larger than the monitor
	if [[ ${wallresW} -ge ${resw} ]] && [[ ${wallresH} -ge ${resh} ]]
	then
		# Fill the main monitor with the wallpaper
		feh --bg-fill ${wall} ${maincolsmall}
	else	
		# Create an image matching the size of the main monitor with the main color
		convert -size ${res} xc:'#'${maincol} ${maincollarge}
		magick composite -type TrueColor -gravity ${position} ${wall} ${large} ${over}
		# Apply the overlayed wallpaper and the small image of the main color
		feh --bg-fill ${maincolover} ${maincolsmall}
	fi
fi

notify-send "paperWiz" "Wallpaper set"
